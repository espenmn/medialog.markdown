<html>
<body>
 
 
<textarea  class="markdown-textarea"
           type="textarea"
           rows="50" 
           cols="10" 
           role="markdown"  
           tal:attributes="id string:${view/id};
           name view/name;
           value view/value;
           disabled view/disabled;
           alt view/alt;
           accesskey view/accesskey;
           onselect view/onselect;"   
           tal:content="view/value"/>

<!---script 
    type="text/javascript" src="++resource++medialog.markdown/bootstrap-3.2.0/js/bootstrap.min.js"></script-->
 
 
   <div tal:content="structure view/render_markdown" />
   
   <a href="#" class="pat-contentloader" data-pat-contentloader="url:view/render_markdown;">Load content</a>
   
   
      <a href="#" class="pat-contentloader" data-pat-contentloader="content:#clexample1;target:#clexample1target;">Load content</a>
   <div id="clexample1target">Original Content</div>
   <div id="clexample1" style="display:none"><div tal:content="structure view/render_markdown" /></div>
   

<script>
  require([
    'jquery',
    '++resource++medialog.markdown/twExoticMarkdownEditor.js',
    '++resource++medialog.markdown/tinymceBubbleBar.js',
    '++resource++medialog.markdown/twPreCodeManager.js',
    '++resource++medialog.markdown/modxMagicHoverLink.js'  // Note: no `.js`
  ], function($) {
       tinymce.init({
		  selector: ".markdown-textarea",
		  //inline: true, //for contenteditable selector
		  forced_root_block : "", //!important
		  force_br_newlines : true, //!important
		  force_p_newlines : false, //!important
		  valid_elements: "br", //!important
		  paste_as_text: true, //!important
		  external_plugins: {
			twExoticMarkdownEditor: "++resource++medialog.markdown/twExoticMarkdownEditor.js", //!important
			bubbleBar: "++resource++medialog.markdown/tinymceBubbleBar.js", //!important
			twPreCodeManager: "++resource++medialog.markdown/twPreCodeManager.js",
			modxMagicHoverLink: "++resource++medialog.markdown/modxMagicHoverLink.js",
		  },
		  twExoticMarkdownEditorSettings: {
			addClass: false, //default is true (add .twExoticMarkdownEditor class to editor body)
			removeClasses: "a b c", // remove class(es) when editor loads - smoothly reveal editor only after text has been prepared
			skipClass: "", // do not process this particular editor content, skip it!
			addAttr: false, //default is true (add markdown="1" to editor body) good for parsing mixed content in mark/parsedownExtra
		  },
		  plugins: "paste contextmenu save searchreplace", //!important
		  toolbar: "modxMagicHoverLink twPreCodeManager boldMD italicMD linkMD imageMD blockquoteMD codeMD numlistMD bullistMD tableMD undo redo searchreplace bubbleBarOptionsButton", //!important
		  menubar: false,
		  contextmenu: "modxMagicHoverLink twPreCodeManager boldMD italicMD linkMD imageMD blockquoteMD codeMD numlistMD bullistMD tableMD undo redo searchreplace template" //!important
		})
	});
</script>
</body>
</html>
